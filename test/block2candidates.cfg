process FLOW = {

    untracked PSet maxEvents = {untracked int32 input = -1}

    include "RecoParticleFlow/PFProducer/data/particleFlow.cff"
    replace particleFlow.verbose = true


    service = MessageLogger  {
	untracked vstring destinations   = { "cout" }
	untracked vstring categories     = { 
	    "PFProducer"
	}
	untracked vstring debugModules   = { "*" }
	untracked PSet cout = { 
	    untracked string threshold = "INFO"
	    untracked PSet INFO            = { untracked int32 limit = 0 }
	    untracked PSet DEBUG           = { untracked int32 limit = 0 }
	    untracked PSet PFProducer = { untracked int32 limit = 10000000}
	    untracked PSet TauBenchmarkAnalyzer = { untracked int32 limit = 0}
	} 
    }
    

    # to generate this input file : 
    # cd   ../../PFBlockProducer/test/
    # cmsRun ditau_read_fevt.cfg
    source = PoolSource {
        untracked vstring fileNames = { 'file:../../PFBlockProducer/test/blocks_famos.root' 
	}
    }
   

    ###############################
    module out = PoolOutputModule
    {
	untracked string fileName = "candidates.root" 
	untracked vstring outputCommands = 
	{
            "drop *",
            "keep recoPFClusters_*_*_*",
	    "keep recoPFBlocks_*_*_*",
	    "keep recoPFCandidates_*_*_*",
	    "keep recoTracks_*_*_*"
	}
    }

    module dump = EventContentAnalyzer {}


    ###############################

    path p = { 
#	dump,
	particleFlow
    }
    
#    service = ProfilerService {
#	untracked int32 firstEvent = 2
#	untracked int32 lastEvent = 51
#	untracked vstring paths = { "p"}
#    }


    endpath outpath = {out}	

}
