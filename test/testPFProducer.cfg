process eflow =  {
	#keep the logging output to a nice level
	#include "FWCore/MessageLogger/data/MessageLogger.cfi"
  	service = MessageLogger
  	{
    		untracked vstring destinations = {"cout"}

    		untracked vstring categories = {
      			"PFProducer"
    		}
    		untracked vstring debugModules = { "pf" }
    		untracked PSet cout = {
		#	untracked string threshold = "DEBUG"
      			untracked string threshold = "INFO"
      			untracked PSet INFO = { untracked int32 limit = -1 }
      			untracked PSet DEBUG = { untracked int32 limit = -1 }
      			untracked PSet PFProducer = { untracked int32 limit = 1000000 }
    		}
  	}

        #Geometry
        include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
        es_prefer = XMLIdealGeometryESSource {}

	include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"

        # include used for track reconstruction
	include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"




	source = PoolSource
	{
		# Number of events program should run
		# 100 single electrons, pt=50 GeV, uniform eta and phi in both barrel and endcap
		# untracked vstring fileNames = {'file:1mu.root'}
		untracked vstring fileNames = {'file:singlepi_reco.root'}
		untracked int32 maxEvents = -1
	}


        include "RecoParticleFlow/PFClusterProducer/data/pFClusterDefaults.cff"


	module pf = PFProducer {
		
		# true particles 
		include "FastSimulation/Event/data/NoVertexGenerator.cfi"
        	include "FastSimulation/Event/data/ParticleFilter.cfi"

		# Tracking algorithms
		string Fitter      = "KFFittingSmoother"   
		string Propagator  = "PropagatorWithMaterial" 
		string TTRHBuilder = "WithTrackAngle"
		# Input/output collections for tracks
		untracked string TrackCandidateCollection = "CkfTrackCandidates"
        	untracked string PFRecTrackCollection     = "PFRecTrackCollection"
        	untracked string PFParticleCollection     = "PFParticleCollection"
	}
	
	module o2 = PoolOutputModule
  	{
     		untracked string fileName = "test.root" 
     		untracked vstring outputCommands = 
     		{
	       		"drop *",
			"keep recoPFRecHits_*_*_*",
			"keep recoPFRecTracks_*_*_*",
			"keep recoPFParticles_*_*_*"			
     		}
  	}

	module dump = EventContentAnalyzer {}

#        path p = { dump }
 	path p = { pfcluster, pf } 

  	endpath outpath = { o2 }
}
