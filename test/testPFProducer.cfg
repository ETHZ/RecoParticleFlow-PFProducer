process eflow =  {
	#keep the logging output to a nice level
	#include "FWCore/MessageLogger/data/MessageLogger.cfi"
  	service = MessageLogger
  	{
    		untracked vstring destinations = {"cout"}

    		untracked vstring categories = {
      			"PFProducer"
    		}
    		untracked vstring debugModules = { "pf" }
    		untracked PSet cout = {
			untracked string threshold = "DEBUG"
      		#	untracked string threshold = "INFO"
      			untracked PSet INFO = { untracked int32 limit = -1 }
      			untracked PSet DEBUG = { untracked int32 limit = -1 }
      			untracked PSet PFProducer = { untracked int32 limit = 1000000 }
    		}
  	}

	include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"

	# magnetic field (allready defined in geometryForClustering.cff) 
	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

        # common geometry
	# include "Geometry/CMSCommonData/data/cmsRecoIdealGeometryXML.cfi"

	# tracker geometry
	include "Geometry/TrackerRecoData/data/trackerRecoGeometryXML.cfi"
 
	# tracker geometry
	include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
 
	# tracker numbering
	include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

	# KFUpdatoerESProducer
	include "TrackingTools/KalmanUpdators/data/KFUpdatorESProducer.cfi"

	# Chi2MeasurementEstimatorESProducer
	include "TrackingTools/KalmanUpdators/data/Chi2MeasurementEstimatorESProducer.cfi"

	# KFTrajectoryFitterESProducer
	include "TrackingTools/TrackFitters/data/KFTrajectoryFitterESProducer.cfi"

	# KFTrajectorySmootherESProducer
	include "TrackingTools/TrackFitters/data/KFTrajectorySmootherESProducer.cfi"

	# KFFittingSmootherESProducer
	include "TrackingTools/TrackFitters/data/KFFittingSmootherESProducer.cfi"

	# PropagatorWithMaterialESProducer
	include "TrackingTools/MaterialEffects/data/MaterialPropagator.cfi"

	# PropagatorWithMaterialESProducer
	include "TrackingTools/MaterialEffects/data/OppositeMaterialPropagator.cfi"

	# stripCPE
	include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"

	# pixelCPE
	include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"

	#TransientTrackingBuilder
	include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"

#	include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"

	source = PoolSource
	{
		# Number of events program should run
		# 100 single electrons, pt=50 GeV, uniform eta and phi in both barrel and endcap
		# untracked vstring fileNames = {'file:1mu.root'}
		untracked vstring fileNames = {'file:/home/Colin/CMS/CMSSW_0_8_0/src/Workdir/singlepi_reco.root'}
		untracked int32 maxEvents = -1
	}


        include "RecoParticleFlow/PFClusterProducer/data/pFClusterDefaults.cff"
	

	module pf = PFProducer {
		# Tracking algorithms
		string Fitter      = "KFFittingSmoother"   
		string Propagator  = "PropagatorWithMaterial" 
		string TTRHBuilder = "WithTrackAngle"
		# Input/output collections for tracks
		string TrackCandidateCollection = "CkfTrackCandidates"
        	string PFRecTrackCollection     = "PFRecTrackCollection"
	}
  
	module o2 = PoolOutputModule
  	{
     		untracked string fileName = "test.root" 
     		untracked vstring outputCommands = 
     		{
	       		"drop *",
			"keep recoPFRecHits_*_*_*",
			"keep recoPFRecTracks_*_*_*"
     		}
  	}

	module dump = EventContentAnalyzer {}

# 	path p = {pfcluster, pf} 
 	path p = { pf, dump} 
  	endpath outpath = { o2 }
}
