process T = 
{
    # include services
    include "Configuration/ReleaseValidation/data/Services.cfi"
    
    # initialize  MessageLogger
    include "FWCore/MessageService/data/MessageLogger.cfi"
    
    service = RandomNumberGeneratorService
    {
	untracked uint32 sourceSeed = 123456789
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 98765432
	}
    }
    
    untracked PSet options = {
	untracked bool makeTriggerResults = false
	vstring listOfTriggers = {}
    }
    
    source = FlatRandomEGunSource
    {
	untracked int32 maxEvents = 10
	untracked PSet PGunParameters =
	{
	    # you can request more than 1 particle
	    untracked vint32 PartID = { 22 }
	    untracked double MinEta = -3
	    untracked double MaxEta = 3
	    untracked double MinPhi = -3.14159265358979323846 # in radians
	    untracked double MaxPhi =  3.14159265358979323846
	    untracked double MinE  = 0.
	    untracked double MaxE  = 200.
	}
	#      untracked bool AddAntiParticle = true # back-to-back particles
	untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
    }
    
    # Geometry
    es_source = XMLIdealGeometryESSource
    {
	vstring geomXMLFiles = {
	    "Geometry/CMSCommonData/data/materials.xml", 
	    "Geometry/CMSCommonData/data/rotations.xml", 
	    "Geometry/EcalCommonData/data/ecal.xml",     
	    "Geometry/CMSCommonData/data/cms.xml",       
	    "Geometry/EcalSimData/data/ecalsens.xml",    
	    "Geometry/HcalSimData/data/CaloUtil.xml",    
	    "Geometry/CMSCommonData/data/MagneticFieldVolumes.xml",
	    "Geometry/CMSCommonData/data/FieldParameters.xml",
	    "Geometry/EcalSimData/data/EcalProdCuts.xml"
	}
	
	string rootNodeName = "cms:OCMS"
    }
    
    include "Geometry/CaloEventSetup/data/EcalTrigTowerConstituents.cfi"
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    
    # Vertex smearing	
    include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
    
    # Geant4-based CMS Detector simulation
    include "SimGeneral/HepPDTESSource/data/pdt.cfi"
    include "SimG4Core/Application/data/SimG4Object.cfi"
    
    # Digitization of the simulated hits
    module mix = MixingModule
    {
	int32 bunchspace = 25
    }
    include "SimCalorimetry/EcalSimProducers/data/ecaldigi.cfi"
    include "SimCalorimetry/EcalSelectiveReadoutProducers/data/ecalDigis.cfi"
    include "SimCalorimetry/EcalZeroSuppressionProducers/data/ecalPreshowerDigis.cfi"
    sequence digitization = { mix, ecalUnsuppressedDigis, ecalDigis, ecalPreshowerDigis }
    
    # Reconstruction of ECAL clusters
    include "RecoLocalCalo/EcalRecProducers/data/ecalLocalRecoSequence.cff"
    include "RecoEcal/EgammaClusterProducers/data/islandClusteringSequence.cff"
    include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"
    include "RecoEcal/EgammaClusterProducers/data/preshowerClusteringSequence.cff"
    sequence ecalClusteringSequence = {
	islandClusteringSequence,
	hybridClusteringSequence,
	preshowerClusteringSequence
    }
    
    # Order of execution
    path p1 = { g4SimHits, digitization, ecalLocalRecoSequence, ecalClusteringSequence}
    
    # Event output
    #include "Configuration/EventContent/data/RECOOutput.cff"
    module GEN-SIM-DIGI-RECO = PoolOutputModule 
    { 
	untracked string fileName = "PhysVal_ParticleFlow_Gamma_0_200_NoTracker.root"
	# using RECOOutput
	# "keep *_ecalDigis_*_*"
	# "keep *_ecalPreshowerDigis_*_*"
	# "keep *_electronPixelSeeds_*_*"
	
	untracked vstring outputCommands = 
	{
	    "keep *",
	    "drop *_muoncscdigi_*_*",
	    "drop *_muondtdigi_*_*",
	    "drop *_hcalDigis_*_*",
	    "drop *_ecalDigis_*_*",
	    "drop *_siStripDigis_*_*",
	    "drop *_siPixelDigis_*_*",
	    "drop *_ecalUnsuppressedDigis_*_*",
	    "drop *_ecalPreshowerDigis_*_*",
	    "drop *_ecalWeightUncalibRecHit_*_*"
	}
    }
    
    endpath outpath = {GEN-SIM-DIGI-RECO}
}		
