process USER = {

    # initialize  MessageLogger
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    replace MessageLogger.cout.threshold = "INFO"
    replace MessageLogger.cerr.default.limit = 10

#    service = MessageLogger  {
#	untracked vstring destinations   = { "cout" }
#	untracked vstring categories     = { "PFProducer" }
#	untracked vstring debugModules   = { "*" }
#	untracked PSet cout = { 
#	    untracked string threshold = "INFO"
#	    untracked PSet INFO            = { untracked int32 limit = 0 }
#	    untracked PSet DEBUG           = { untracked int32 limit = 0 }
#	    untracked PSet PFProducer = { untracked int32 limit = 10000000}
#	} 
#    }
    
    service = RandomNumberGeneratorService
    {
	untracked uint32 sourceSeed = 98765
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 123456789
	    untracked uint32 g4SimHits  = 11	
	}    
    }

    # The particle data table
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"   
    es_prefer = PythiaPDTESSource {}

    #input module:
    include "RecoParticleFlow/PFProducer/test/singletau_source.cff"      

    
    
    include "RecoParticleFlow/PFProducer/test/allReco.cff"
    include "RecoParticleFlow/PFClusterProducer/data/pFClusterDefaults.cff"
    include "RecoParticleFlow/PFProducer/data/particleFlow.cff"
    
 
    ###############################
    #output module:
    module GEN-SIM-DIGI-RECO = PoolOutputModule
    {
	untracked string fileName = "singletau_pf.root" 
	untracked vstring outputCommands = 
	{
	    "keep *",
	    "drop *_muoncscdigi_*_*",
	    "drop *_muondtdigi_*_*",
	    "drop *_hcalDigis_*_*",
	    "drop *_ecalDigis_*_*",
	    "drop *_siStripDigis_*_*",
	    "drop *_siPixelDigis_*_*",
	    "drop *_ecalUnsuppressedDigis_*_*",
	    "drop *_ecalPreshowerDigis_*_*",
	    "drop *_ecalWeightUncalibRecHit_*_*"
	}
    }

     
    ###############################
    # now define what you want to do
    path p = {psim, pdigi, reconstruction, particleFlowCluster, particleFlow, iterativeCone5PFJets}
    # digitization and reconstruction are sequences of actions that are defined in the .cff files that were included
    
    endpath outpath = {GEN-SIM-DIGI-RECO}	

}
